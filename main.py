import os
import time
from colorama import init, Fore
import schedule
from pytube import YouTube

from app.components.TiktokUploader import TiktokUploader
from app.components.TrendingVideo import TrendingVideo
from app.components.VideoEditor import VideoEditorStart
from app.components.YoutubeForTiktok import YoutubeForTiktok
from app.configuration import MODEL_PATH, TEMPS_UPLOAD, VIDEOS_ID, VIDEOS_DIRECTORY
from app.lib.video_transcription.main import VideoTranscriber

init()

colors = [Fore.RED, Fore.YELLOW, Fore.GREEN, Fore.CYAN, Fore.BLUE, Fore.MAGENTA]

text = """ùììùì•ùìõùìêùìì - TIKTOK UPLOADER"""

for i, char in enumerate(text):
    color = colors[i % len(colors)]
    print(color + char, end="", flush=True)
print()

def execute_youtube_for_tiktok():
    try:
        youtubefortiktok = YoutubeForTiktok()
        youtubefortiktok.start()
    except Exception as e:
        print(e)

def clear_console():
    os.system('cls' if os.name == 'nt' else 'clear')

def download_videos_from_file():
    try:
        print("Installation des vid√©os d'√©dition...")
        with open(VIDEOS_ID, 'r') as file:
            links = file.readlines()
            for link in links:
                link = link.strip()  # Supprimer les espaces et les sauts de ligne
                try:
                    yt = YouTube(link)
                    stream = yt.streams.get_highest_resolution()
                    print(f"T√©l√©chargement de {yt.title}...")
                    stream.download(VIDEOS_DIRECTORY)
                    print(f"{yt.title} t√©l√©charg√©e avec succ√®s!")
                except Exception as e:
                    print(f"Erreur lors du t√©l√©chargement de la vid√©o √† partir du lien {link}: {e}")
    except FileNotFoundError:
        print(f"Fichier {VIDEOS_ID} introuvable!")

def select_number():
    print(Fore.WHITE)
    mp4_files = [file for file in os.listdir(VIDEOS_DIRECTORY) if file.endswith(".mp4")]
    if len(mp4_files) == 0:
        print("Aucune vid√©o pour √©diter √† √©t√© trouv√©...")
        download_videos_from_file()
    else:
        print("Des vid√©os ont √©t√© trouv√©e pour l'√©dition. Voulez-vous quand m√™me installer les vid√©os ?")
        download_input = input("Oui/Non : ")
        if download_input.lower() == "oui":
            download_videos_from_file()
    clear_console()
    while True:
        try:
            print(Fore.BLUE)
            print("MENU : ")
            print("1) - R√©cup√©rer toutes les vid√©os tendances feed YouTube")
            print("2) - Upload une vid√©o de YouTube sur TikTok (automatique)")
            print("3) - Editer une vid√©o pour mettre sur TikTok (automatique)")
            print("4) - Sous titrer une vid√©o (format tiktok)")
            print("5) - Envoyer une vid√©o YouTube (tendance) vers TikTok (automatique)")
            print("6) - AUTOMATIQUE UPLOADER YOUTUBE TENDANCE VERS TIKTOK (Chaque 24h)")
            print(Fore.WHITE)
            number = int(input("Veuillez s√©lectionner un chiffre parmi 1, 2, 3, 4, 5, 6 : "))
            if number == 1:
                trending = TrendingVideo()
                trending.get_trending_videos()
            elif number == 2:
                path_video = input("Veuillez entrer le chemin de la vid√©o : ")
                abs_path_video = os.path.abspath(path_video)
                if os.path.exists(abs_path_video):
                    titre = input("Veuillez entrer le titre de la vid√©o : ")
                    TiktokUploader([(abs_path_video, titre)])
                else:
                    print("Le chemin sp√©cifi√© n'existe pas. Veuillez r√©essayer.")
            elif number == 3:
                VideoEditorStart()
            elif number == 4:
                text = "TIPS : Le model de base est MEDIUM. Il faudrait mieux ne pas le changer /!\\ Pour √ßa faite entrer sans rien mettre"
                print("\033[91m {}\033[00m".format(text))
                model = input("Veuillez entrer le model de la vid√©o : ")
                if model == "":
                    model = MODEL_PATH
                path_video = input("Veuillez entrer le chemin de la vid√©o : ")
                abs_path_video = os.path.abspath(path_video)
                if os.path.exists(abs_path_video):
                    trannscriber = VideoTranscriber(model, path_video)
                    trannscriber.extract_audio()
                    trannscriber.transcribe_video()
                    trannscriber.create_video(path_video)
                else:
                    print("Le chemin sp√©cifi√© n'existe pas. Veuillez r√©essayer.")
            elif number == 5:
                youtubefortiktok = YoutubeForTiktok()
                youtubefortiktok.start()
            elif number == 6:
                execute_youtube_for_tiktok()
                schedule.every(TEMPS_UPLOAD).minutes.do(execute_youtube_for_tiktok)
                print("Prochain envoie dans : ", TEMPS_UPLOAD)
                while True:
                    schedule.run_pending()
            else:
                print("Choix invalide. Veuillez s√©lectionner un chiffre valide.")
        except ValueError:
            print("Entr√©e invalide. Veuillez saisir un chiffre entier.")
        clear_console()

select_number()

